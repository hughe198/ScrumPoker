{"ast":null,"code":"var _class;\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nfunction GameRoomComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function GameRoomComponent_div_0_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeRoom());\n    });\n    i0.ɵɵtext(4, \"Close\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.roomName);\n  }\n}\nexport class GameRoomComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.roomKey = '';\n    this.closeRoomEmitter = new EventEmitter();\n    this.roomName = '';\n    this.visible = true;\n  }\n  initialiseRoom(roomID) {\n    this.apiService.getRoom(roomID).subscribe(data => {\n      this.roomDetails = data;\n      this.roomName = this.roomDetails.room_name;\n    });\n  }\n  ngOnInit() {\n    this.initialiseRoom(this.roomKey);\n  }\n  closeRoom() {\n    this.closeRoomEmitter.emit(true);\n    this.visible = false;\n  }\n}\n_class = GameRoomComponent;\n_class.ɵfac = function GameRoomComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-game-room\"]],\n  inputs: {\n    roomKey: \"roomKey\"\n  },\n  outputs: {\n    closeRoomEmitter: \"closeRoomEmitter\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"click\"]],\n  template: function GameRoomComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, GameRoomComponent_div_0_Template, 5, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.visible);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","GameRoomComponent_div_0_Template_button_click_3_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","closeRoom","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","roomName","GameRoomComponent","constructor","apiService","roomKey","closeRoomEmitter","visible","initialiseRoom","roomID","getRoom","subscribe","data","roomDetails","room_name","ngOnInit","emit","ɵɵdirectiveInject","i1","ApiService","selectors","inputs","outputs","decls","vars","consts","template","GameRoomComponent_Template","rf","ctx","ɵɵtemplate","GameRoomComponent_div_0_Template","ɵɵproperty"],"sources":["D:\\small projects\\ScrumPoker\\scrumPoker_Angular\\scrumpoker\\src\\app\\game-room\\game-room.component.ts","D:\\small projects\\ScrumPoker\\scrumPoker_Angular\\scrumpoker\\src\\app\\game-room\\game-room.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { gameRoom } from '../iAPI.interface';\n\n@Component({\n  selector: 'app-game-room',\n  templateUrl: './game-room.component.html',\n  styleUrls: ['./game-room.component.scss'],\n})\nexport class GameRoomComponent implements OnInit {\n  @Input() roomKey: string = '';\n\n  @Output() closeRoomEmitter: EventEmitter<boolean> =\n    new EventEmitter<boolean>();\n  roomDetails!: gameRoom;\n  roomName: string = '';\n  visible = true;\n\n  constructor(private apiService: ApiService) {}\n\n  initialiseRoom(roomID: string) {\n    this.apiService.getRoom(roomID).subscribe((data: gameRoom) => {\n      this.roomDetails = data;\n      this.roomName = this.roomDetails.room_name;\n    });\n  }\n\n  ngOnInit(): void {\n    this.initialiseRoom(this.roomKey);\n  }\n  closeRoom() {\n    this.closeRoomEmitter.emit(true);\n    this.visible = false;\n  }\n}\n","<div *ngIf=\"visible\">\n  <div>{{ roomName }}</div>\n\n  <button (click)=\"closeRoom()\">Close</button>\n</div>\n"],"mappings":";AAAA,SAAoBA,YAAY,QAA+B,eAAe;;;;;;;ICA9EC,EAAA,CAAAC,cAAA,UAAqB;IACdD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAEzBH,EAAA,CAAAC,cAAA,gBAA8B;IAAtBD,EAAA,CAAAI,UAAA,mBAAAC,yDAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,SAAA,EAAW;IAAA,EAAC;IAACX,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAFvCH,EAAA,CAAAY,SAAA,GAAc;IAAdZ,EAAA,CAAAa,iBAAA,CAAAC,MAAA,CAAAC,QAAA,CAAc;;;ADQrB,OAAM,MAAOC,iBAAiB;EAS5BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IARrB,KAAAC,OAAO,GAAW,EAAE;IAEnB,KAAAC,gBAAgB,GACxB,IAAIrB,YAAY,EAAW;IAE7B,KAAAgB,QAAQ,GAAW,EAAE;IACrB,KAAAM,OAAO,GAAG,IAAI;EAE+B;EAE7CC,cAAcA,CAACC,MAAc;IAC3B,IAAI,CAACL,UAAU,CAACM,OAAO,CAACD,MAAM,CAAC,CAACE,SAAS,CAAEC,IAAc,IAAI;MAC3D,IAAI,CAACC,WAAW,GAAGD,IAAI;MACvB,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACY,WAAW,CAACC,SAAS;IAC5C,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACP,cAAc,CAAC,IAAI,CAACH,OAAO,CAAC;EACnC;EACAR,SAASA,CAAA;IACP,IAAI,CAACS,gBAAgB,CAACU,IAAI,CAAC,IAAI,CAAC;IAChC,IAAI,CAACT,OAAO,GAAG,KAAK;EACtB;;SAxBWL,iBAAiB;;mBAAjBA,MAAiB,EAAAhB,EAAA,CAAA+B,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAAjBjB,MAAiB;EAAAkB,SAAA;EAAAC,MAAA;IAAAhB,OAAA;EAAA;EAAAiB,OAAA;IAAAhB,gBAAA;EAAA;EAAAiB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT9B1C,EAAA,CAAA4C,UAAA,IAAAC,gCAAA,iBAIM;;;MAJA7C,EAAA,CAAA8C,UAAA,SAAAH,GAAA,CAAAtB,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}