{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nfunction LobbyComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 3)(6, \"button\", 4);\n    i0.ɵɵtext(7, \"Enter room\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const room_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(room_r1.value.room_name);\n  }\n}\nexport class LobbyComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.gameRooms = {};\n    this.errorMessage = ''; // Add error message variable\n  }\n\n  getRooms() {\n    this.apiService.getRooms().subscribe(data => {\n      this.gameRooms = data;\n    }, error => {\n      this.errorMessage = 'Error fetching rooms: ' + error.message;\n    });\n  }\n  ngOnInit() {\n    this.getRooms();\n  }\n}\n_class = LobbyComponent;\n_class.ɵfac = function LobbyComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-lobby\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"border\", \"border-1\", \"border-secondary\", \"rounded\"], [1, \"card-title\", \"text-center\"], [1, \"card-body\"], [1, \"btn\", \"btn-primary\", \"mt-4\"]],\n  template: function LobbyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LobbyComponent_div_0_Template, 8, 1, \"div\", 0);\n      i0.ɵɵpipe(1, \"keyvalue\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 1, ctx.gameRooms));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.KeyValuePipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","room_r1","value","room_name","LobbyComponent","constructor","apiService","gameRooms","errorMessage","getRooms","subscribe","data","error","message","ngOnInit","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","LobbyComponent_Template","rf","ctx","ɵɵtemplate","LobbyComponent_div_0_Template","ɵɵproperty","ɵɵpipeBind1"],"sources":["D:\\small projects\\ScrumPoker\\scrumPoker_Angular\\scrumpoker\\src\\app\\lobby\\lobby.component.ts","D:\\small projects\\ScrumPoker\\scrumPoker_Angular\\scrumpoker\\src\\app\\lobby\\lobby.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { gameRooms } from '../iAPI.interface';\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.scss'],\n})\nexport class LobbyComponent implements OnInit {\n  gameRooms: gameRooms = {};\n  errorMessage: string = ''; // Add error message variable\n\n  constructor(private apiService: ApiService) {}\n\n  getRooms() {\n    this.apiService.getRooms().subscribe(\n      (data) => {\n        this.gameRooms = data;\n      },\n      (error) => {\n        this.errorMessage = 'Error fetching rooms: ' + error.message;\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.getRooms();\n  }\n}\n","<div *ngFor=\"let room of gameRooms | keyvalue\">\n  <div class=\"card border border-1 border-secondary rounded\">\n    <div class=\"card-title text-center\">\n      <h1>{{ room.value.room_name }}</h1>\n    </div>\n    <div class=\"card-body\">\n      <button class=\"btn btn-primary mt-4\">Enter room</button>\n    </div>\n  </div>\n</div>\n"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,UAA+C;IAGrCD,EAAA,CAAAE,MAAA,GAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAErCH,EAAA,CAAAC,cAAA,aAAuB;IACgBD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAHpDH,EAAA,CAAAI,SAAA,GAA0B;IAA1BJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAAC,SAAA,CAA0B;;;ADMpC,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAH9B,KAAAC,SAAS,GAAc,EAAE;IACzB,KAAAC,YAAY,GAAW,EAAE,CAAC,CAAC;EAEkB;;EAE7CC,QAAQA,CAAA;IACN,IAAI,CAACH,UAAU,CAACG,QAAQ,EAAE,CAACC,SAAS,CACjCC,IAAI,IAAI;MACP,IAAI,CAACJ,SAAS,GAAGI,IAAI;IACvB,CAAC,EACAC,KAAK,IAAI;MACR,IAAI,CAACJ,YAAY,GAAG,wBAAwB,GAAGI,KAAK,CAACC,OAAO;IAC9D,CAAC,CACF;EACH;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACL,QAAQ,EAAE;EACjB;;SAnBWL,cAAc;;mBAAdA,MAAc,EAAAT,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAAdb,MAAc;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3B7B,EAAA,CAAA+B,UAAA,IAAAC,6BAAA,iBASM;;;;MATgBhC,EAAA,CAAAiC,UAAA,YAAAjC,EAAA,CAAAkC,WAAA,OAAAJ,GAAA,CAAAlB,SAAA,EAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}